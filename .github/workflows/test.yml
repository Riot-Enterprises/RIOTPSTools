name: "ðŸ“¦ Create Release "

on:
  push:
    branches:
    tags: v[1-9]+\.[0-9]+\.[0-9]+

  workflow_dispatch:

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: "Install Dependencies"
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module BuildHelpers
          Import-Module BuildHelpers
          $BuildEnvironment = Get-BuildEnvironment
          if($BuildEnvironment.BranchName.StartsWith('refs/tags/')) {
            $tag = $BuildEnvironment.BranchName.Replace('refs/tags/','')
          } else {
                $prefix = (git config gitflow.prefix.versiontag)
                $RegEx = "^$([regex]::Escape($prefix))(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$"
                git tag | Select-String $RegEx | Select-Object -ExpandProperty Matches | Select-Object Value | 
                ForEach-Object { 
                  $x = $null; 
                  $null = [System.Management.Automation.SemanticVersion]::tryparse($_.Value, [ref]$x)
                  $x 
                } | Sort-Object -Descending | Select-Object -First 1 
          }
          $tag

